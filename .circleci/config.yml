version: 2.1

orbs:
  rust: circleci/rust@1.1.0

jobs:
  test:
    docker:
      - image: cimg/rust:1.70
      - image: cimg/postgres:17.0
        environment:
          POSTGRES_DB: fauxdb_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""

    steps:
      - checkout
      
      - rust/install-deps
      
      - run:
          name: Wait for PostgreSQL
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      
      - run:
          name: Run tests
          command: cargo test --verbose
          environment:
            DATABASE_URL: postgresql://postgres@localhost/fauxdb_test

  lint:
    docker:
      - image: cimg/rust:1.70
    
    steps:
      - checkout
      
      - rust/install-deps
      
      - run:
          name: Check formatting
          command: cargo fmt -- --check
      
      - run:
          name: Run clippy
          command: cargo clippy -- -D warnings

  coverage:
    docker:
      - image: cimg/rust:1.70
      - image: cimg/postgres:17.0
        environment:
          POSTGRES_DB: fauxdb_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""

    steps:
      - checkout
      
      - rust/install-deps
      
      - run:
          name: Install tarpaulin
          command: cargo install cargo-tarpaulin
      
      - run:
          name: Wait for PostgreSQL
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      
      - run:
          name: Generate coverage
          command: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml
          environment:
            DATABASE_URL: postgresql://postgres@localhost/fauxdb_test
      
      - run:
          name: Upload coverage to Codecov
          command: bash <(curl -s https://codecov.io/bash)

  integration:
    docker:
      - image: cimg/rust:1.70
      - image: cimg/postgres:17.0
        environment:
          POSTGRES_DB: fauxdb_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""

    steps:
      - checkout
      
      - rust/install-deps
      
      - run:
          name: Install mongosh
          command: |
            curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor
            echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
            sudo apt-get update
            sudo apt-get install -y mongodb-mongosh
      
      - run:
          name: Wait for PostgreSQL
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      
      - run:
          name: Build FauxDB
          command: cargo build --release
      
      - run:
          name: Start FauxDB
          command: |
            ./target/release/fauxdb &
            sleep 10
      
      - run:
          name: Run MongoDB compatibility tests
          command: cargo test --test fauxdb_tests --verbose
          environment:
            DATABASE_URL: postgresql://postgres@localhost/fauxdb_test

  security:
    docker:
      - image: cimg/rust:1.70
    
    steps:
      - checkout
      
      - rust/install-deps
      
      - run:
          name: Install cargo-audit
          command: cargo install cargo-audit
      
      - run:
          name: Run security audit
          command: cargo audit

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - lint
      - test
      - coverage
      - integration
      - security